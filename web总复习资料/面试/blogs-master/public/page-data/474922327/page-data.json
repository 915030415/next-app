{"componentChunkName":"component---src-templates-blog-post-js","path":"/474922327/","result":{"data":{"site":{"siteMetadata":{"title":"ssh的博客","author":"ssh"}},"markdownRemark":{"id":"9027fa31-8fb8-599e-a1ec-885999add8c7","html":"<h2 id=\"背景介绍\"><a href=\"#%E8%83%8C%E6%99%AF%E4%BB%8B%E7%BB%8D\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>背景介绍</h2>\n<p>最近在做vue高仿<a href=\"https://juejin.im/post/5d3c0765f265da1b60294b78\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">网易云音乐</a>的项目，在做的过程中发现音乐表格这个组件会被非常多的地方复用，而且需求比较复杂的和灵活。</p>\n<h3 id=\"预览地址\"><a href=\"#%E9%A2%84%E8%A7%88%E5%9C%B0%E5%9D%80\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"http://47.99.213.231:8001/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">预览地址</a></h3>\n<h3 id=\"源码地址\"><a href=\"#%E6%BA%90%E7%A0%81%E5%9C%B0%E5%9D%80\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://github.com/sl1673495/vue-netease-music\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">源码地址</a></h3>\n<h2 id=\"图片预览\"><a href=\"#%E5%9B%BE%E7%89%87%E9%A2%84%E8%A7%88\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>图片预览</h2>\n<ul>\n<li>歌单详情\n<img src=\"https://user-gold-cdn.xitu.io/2019/7/31/16c45d24774d06bf?w=1209&#x26;h=481&#x26;f=png&#x26;s=154844\" alt=\"歌单详情\"></li>\n<li>播放列表\n<img src=\"https://user-gold-cdn.xitu.io/2019/7/31/16c45d2920dc1634?w=391&#x26;h=358&#x26;f=png&#x26;s=53326\" alt=\"播放列表\"></li>\n<li>搜索高亮\n<img src=\"https://user-gold-cdn.xitu.io/2019/7/31/16c46085f7a4c70c?w=1210&#x26;h=363&#x26;f=png&#x26;s=135056\" alt=\"搜索高亮\"></li>\n</ul>\n<h2 id=\"需求分析\"><a href=\"#%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>需求分析</h2>\n<p>它需要支持：</p>\n<ul>\n<li>hideColumns参数， 自定义需要隐藏哪些列。</li>\n<li>highLightText，传入字符串，数据中命中的字符串高亮。</li>\n</ul>\n<p>首先 看一下我们平常的table写法。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>table\n      <span class=\"token punctuation\">:</span>data<span class=\"token operator\">=</span><span class=\"token string\">\"tableData\"</span>\n      style<span class=\"token operator\">=</span><span class=\"token string\">\"width: 100%\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">-</span>column\n        prop<span class=\"token operator\">=</span><span class=\"token string\">\"index\"</span>\n        label<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span>\n        width<span class=\"token operator\">=</span><span class=\"token string\">\"180\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">-</span>column<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">-</span>column\n        prop<span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span>\n        label<span class=\"token operator\">=</span><span class=\"token string\">\"音乐标题\"</span>\n        width<span class=\"token operator\">=</span><span class=\"token string\">\"180\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">-</span>column<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">-</span>column\n        prop<span class=\"token operator\">=</span><span class=\"token string\">\"artistsText\"</span>\n        label<span class=\"token operator\">=</span><span class=\"token string\">\"歌手\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">-</span>column<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">></span></code></pre></div>\n<p>这是官网的写法，假设我们传入了 hideColumns: [‘index’, ‘name’]，我们需要在模板里隐藏的话`<code class=\"language-text\"></code></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>table\n    <span class=\"token punctuation\">:</span>data<span class=\"token operator\">=</span><span class=\"token string\">\"tableData\"</span>\n    style<span class=\"token operator\">=</span><span class=\"token string\">\"width: 100%\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">-</span>column\n  <span class=\"token operator\">++</span><span class=\"token operator\">+</span> v<span class=\"token operator\">-</span><span class=\"token keyword\">if</span><span class=\"token operator\">=</span><span class=\"token string\">\"!hideColumns.includes('index')\"</span>\n      prop<span class=\"token operator\">=</span><span class=\"token string\">\"index\"</span>\n      label<span class=\"token operator\">=</span><span class=\"token string\">\" \"</span>\n      width<span class=\"token operator\">=</span><span class=\"token string\">\"180\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">-</span>column<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">-</span>column\n  <span class=\"token operator\">++</span><span class=\"token operator\">+</span> v<span class=\"token operator\">-</span><span class=\"token keyword\">if</span><span class=\"token operator\">=</span><span class=\"token string\">\"!hideColumns.includes('name')\"</span>\n      prop<span class=\"token operator\">=</span><span class=\"token string\">\"name\"</span>\n      label<span class=\"token operator\">=</span><span class=\"token string\">\"音乐标题\"</span>\n      width<span class=\"token operator\">=</span><span class=\"token string\">\"180\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">-</span>column<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">-</span>column\n  <span class=\"token operator\">++</span><span class=\"token operator\">+</span> v<span class=\"token operator\">-</span><span class=\"token keyword\">if</span><span class=\"token operator\">=</span><span class=\"token string\">\"!hideColumns.includes('address')\"</span>\n      prop<span class=\"token operator\">=</span><span class=\"token string\">\"artistsText\"</span>\n      label<span class=\"token operator\">=</span><span class=\"token string\">\"歌手\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">-</span>column<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">></span></code></pre></div>\n<p>这种代码非常笨，所以我们肯定是接受不了的，我们很自然的联想到平常用v-for循环，能不能套用在这个需求上呢。\n首先在data里定义columns</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      columns<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n        prop<span class=\"token punctuation\">:</span> <span class=\"token string\">'index'</span><span class=\"token punctuation\">,</span>\n        label<span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span>\n        width<span class=\"token punctuation\">:</span> <span class=\"token string\">'50'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        prop<span class=\"token punctuation\">:</span> <span class=\"token string\">'artistsText'</span><span class=\"token punctuation\">,</span>\n        label<span class=\"token punctuation\">:</span> <span class=\"token string\">'歌手'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        prop<span class=\"token punctuation\">:</span> <span class=\"token string\">'albumName'</span><span class=\"token punctuation\">,</span>\n        label<span class=\"token punctuation\">:</span> <span class=\"token string\">'专辑'</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        prop<span class=\"token punctuation\">:</span> <span class=\"token string\">'durationSecond'</span><span class=\"token punctuation\">,</span>\n        label<span class=\"token punctuation\">:</span> <span class=\"token string\">'时长'</span><span class=\"token punctuation\">,</span>\n        width<span class=\"token punctuation\">:</span> <span class=\"token string\">'100'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>然后我们在computed中计算hideColumns做一次合并</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">  computed<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">showColumns</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> hideColumns <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span>\n      <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>column <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>hideColumns<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>prop<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> prop <span class=\"token operator\">===</span> column<span class=\"token punctuation\">.</span>prop<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>那么模板里我们就可以简写成</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>table\n    <span class=\"token punctuation\">:</span>data<span class=\"token operator\">=</span><span class=\"token string\">\"songs\"</span>\n  <span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>template v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"(column, index) in showColumns\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">-</span>column\n        <span class=\"token punctuation\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"index\"</span>\n        <span class=\"token comment\">// 混入属性</span>\n        v<span class=\"token operator\">-</span>bind<span class=\"token operator\">=</span><span class=\"token string\">\"column\"</span>\n      <span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">-</span>column<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">></span></code></pre></div>\n<p>注意<code class=\"language-text\">v-bind=&quot;column&quot;</code>这行， 相当于把column中的所有属性混入到table-column中去，是一个非常简便的方法。</p>\n<h2 id=\"script配合template的解决方案\"><a href=\"#script%E9%85%8D%E5%90%88template%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>script配合template的解决方案</h2>\n<p>这样需求看似解决了，很美好。\n</br>\n但是我们忘了非常重要的一点，<code class=\"language-text\">slotScopes</code>这个东西！</p>\n<p>比如音乐时长我们需要format一下，</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"> <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">-</span>column<span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> $utils<span class=\"token punctuation\">.</span><span class=\"token function\">formatTime</span><span class=\"token punctuation\">(</span>scope<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">.</span>durationSecond<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">-</span>column<span class=\"token operator\">></span></code></pre></div>\n<p>但是我们现在把columns都写到script里了，和template分离开来了，我暂时还不知道有什么方法能把<code class=\"language-text\">sciprt</code>里写的模板放到<code class=\"language-text\">template</code>里用，所以先想到一个可以解决问题的方法。就是在template里加一些判断。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>table\n    v<span class=\"token operator\">-</span>bind<span class=\"token operator\">=</span><span class=\"token string\">\"$attrs\"</span>\n    v<span class=\"token operator\">-</span><span class=\"token keyword\">if</span><span class=\"token operator\">=</span><span class=\"token string\">\"songs.length\"</span>\n    <span class=\"token punctuation\">:</span>data<span class=\"token operator\">=</span><span class=\"token string\">\"songs\"</span>\n    @row<span class=\"token operator\">-</span>click<span class=\"token operator\">=</span><span class=\"token string\">\"onRowClick\"</span>\n    <span class=\"token punctuation\">:</span>cell<span class=\"token operator\">-</span><span class=\"token keyword\">class</span><span class=\"token operator\">-</span>name<span class=\"token operator\">=</span><span class=\"token string\">\"tableCellClassName\"</span>\n    style<span class=\"token operator\">=</span><span class=\"token string\">\"width: 99.9%\"</span>\n  <span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>template v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"(column, index) in showColumns\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 需要自定义渲染的列 <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">-</span>column\n        v<span class=\"token operator\">-</span><span class=\"token keyword\">if</span><span class=\"token operator\">=</span><span class=\"token string\">\"['durationSecond'].includes(column.prop)\"</span>\n        <span class=\"token punctuation\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"index\"</span>\n        v<span class=\"token operator\">-</span>bind<span class=\"token operator\">=</span><span class=\"token string\">\"column\"</span>\n      <span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 时长 <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>template v<span class=\"token operator\">-</span><span class=\"token keyword\">else</span><span class=\"token operator\">-</span><span class=\"token keyword\">if</span><span class=\"token operator\">=</span><span class=\"token string\">\"column.prop === 'durationSecond'\"</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span> $utils<span class=\"token punctuation\">.</span><span class=\"token function\">formatTime</span><span class=\"token punctuation\">(</span>scope<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">.</span>durationSecond<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">-</span>column<span class=\"token operator\">></span>\n\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> 普通列 <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">-</span>column\n        v<span class=\"token operator\">-</span><span class=\"token keyword\">else</span>\n        <span class=\"token punctuation\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"index\"</span>\n        v<span class=\"token operator\">-</span>bind<span class=\"token operator\">=</span><span class=\"token string\">\"column\"</span>\n      <span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">-</span>column<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">></span></code></pre></div>\n<p>又一次的需求看似解决了，很美好。 </p>\n<h2 id=\"高亮文字匹配需求分析\"><a href=\"#%E9%AB%98%E4%BA%AE%E6%96%87%E5%AD%97%E5%8C%B9%E9%85%8D%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>高亮文字匹配需求分析</h2>\n</br>\n但是新需求又来了！！根据传入的 highLightText 去高亮某些文字，我们分析一下需求\n</br>\n<p><code class=\"language-text\">鸡你太美</code>这个歌名，我们在搜索框输入<code class=\"language-text\">鸡你</code>\n我们需要把</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;span&gt;鸡你太美&lt;/span&gt;</code></pre></div>\n<p>转化为</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">  &lt;span&gt;\n    &lt;span class=&quot;high-light&quot;&gt;鸡你&lt;/span&gt;\n    太美\n &lt;/span&gt;</code></pre></div>\n<p>我们在template里找到音乐标题这行，写下这端代码：</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template v<span class=\"token operator\">-</span><span class=\"token keyword\">else</span><span class=\"token operator\">-</span><span class=\"token keyword\">if</span><span class=\"token operator\">=</span><span class=\"token string\">\"column.prop === 'name'\"</span><span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">genHighlight</span><span class=\"token punctuation\">(</span>scope<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">methods<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">genHighlight</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span>xxx<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>我发现无从下手了, 因为jsx最终编译成的是return vnode的方法，genHighlight执行以后返回的是vnode，但是你不能直接把vnode放到template里去。</p>\n<h2 id=\"jsx终极解决方案\"><a href=\"#jsx%E7%BB%88%E6%9E%81%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>jsx终极解决方案</h2>\n<p>所以我们要统一环境，直接使用jsx渲染我们的组件，文档可以参照\n</br>\n<a href=\"https://github.com/vuejs/babel-plugin-transform-vue-jsx\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">babel-plugin-transform-vue-jsx</a>\n<br>\n<a href=\"https://github.com/vuejs/jsx\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">vuejs/jsx</a></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> ElTable <span class=\"token keyword\">from</span> <span class=\"token string\">'element-ui/lib/table'</span>\n\n<span class=\"token function\">data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> commonHighLightSlotScopes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      scopedSlots<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>scope<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">genHighlight</span><span class=\"token punctuation\">(</span>scope<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">[</span>scope<span class=\"token punctuation\">.</span>column<span class=\"token punctuation\">.</span>property<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n          <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      columns<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n        prop<span class=\"token punctuation\">:</span> <span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span>\n        label<span class=\"token punctuation\">:</span> <span class=\"token string\">'音乐标题'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token operator\">...</span>commonHighLightSlotScopes\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        prop<span class=\"token punctuation\">:</span> <span class=\"token string\">'artistsText'</span><span class=\"token punctuation\">,</span>\n        label<span class=\"token punctuation\">:</span> <span class=\"token string\">'歌手'</span><span class=\"token punctuation\">,</span>\n         <span class=\"token operator\">...</span>commonHighLightSlotScopes\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        prop<span class=\"token punctuation\">:</span> <span class=\"token string\">'albumName'</span><span class=\"token punctuation\">,</span>\n        label<span class=\"token punctuation\">:</span> <span class=\"token string\">'专辑'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token operator\">...</span>commonHighLightSlotScopes\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        prop<span class=\"token punctuation\">:</span> <span class=\"token string\">'durationSecond'</span><span class=\"token punctuation\">,</span>\n        label<span class=\"token punctuation\">:</span> <span class=\"token string\">'时长'</span><span class=\"token punctuation\">,</span>\n        width<span class=\"token punctuation\">:</span> <span class=\"token string\">'100'</span><span class=\"token punctuation\">,</span>\n        scopedSlots<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">(</span>scope<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n              <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$utils<span class=\"token punctuation\">.</span><span class=\"token function\">formatTime</span><span class=\"token punctuation\">(</span>scope<span class=\"token punctuation\">.</span>row<span class=\"token punctuation\">.</span>durationSecond<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n            <span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  methods<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">genHighlight</span><span class=\"token punctuation\">(</span>title <span class=\"token operator\">=</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token operator\">...</span>省去一些细节\n      <span class=\"token keyword\">const</span> titleSpan <span class=\"token operator\">=</span> matchIndex <span class=\"token operator\">></span> <span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span>\n          <span class=\"token punctuation\">{</span>beforeStr<span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&lt;</span>span <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"high-light-text\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>hitStr<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n          <span class=\"token punctuation\">{</span>afterStr<span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> title<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> titleSpan<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> elTableProps <span class=\"token operator\">=</span> ElTable<span class=\"token punctuation\">.</span>props\n    <span class=\"token comment\">// 从$attrs里提取作为prop的值</span>\n    <span class=\"token comment\">// 这里要注意的点是驼峰命名法(camelCase)和短横线命名法(kebab-case)</span>\n    <span class=\"token comment\">// 都是可以被组件接受的，虽然elTable里的prop定义的属性叫cellClassName</span>\n    <span class=\"token comment\">// 但是我们要把cell-class-name也解析进prop里</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> props<span class=\"token punctuation\">,</span> attrs <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">genPropsAndAttrs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$attrs<span class=\"token punctuation\">,</span> elTableProps<span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">const</span> tableAttrs <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      attrs<span class=\"token punctuation\">,</span>\n      on<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">...</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$listeners<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">[</span><span class=\"token string\">'row-click'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onRowClick<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      props<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token operator\">...</span>props<span class=\"token punctuation\">,</span>\n        cellClassName<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>tableCellClassName<span class=\"token punctuation\">,</span>\n        data<span class=\"token punctuation\">:</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>songs<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      style<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> width<span class=\"token punctuation\">:</span> <span class=\"token string\">'99.9%'</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>songs<span class=\"token punctuation\">.</span>length <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>table\n        <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>tableAttrs<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">></span>\n        <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>showColumns<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>column<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> scopedSlots<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>columnProps <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> column\n          <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n            <span class=\"token operator\">&lt;</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">-</span>column key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span> props<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>columnProps<span class=\"token punctuation\">}</span> scopedSlots<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>scopedSlots<span class=\"token punctuation\">}</span> <span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">-</span>column<span class=\"token operator\">></span>\n          <span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>el<span class=\"token operator\">-</span>table<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token keyword\">null</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p><code class=\"language-text\">attrs: this.$attrs</code> 注意这句话，我们在template里可以通过\n<code class=\"language-text\">v-bind=&quot;$attrs&quot;</code>去透传外部传进来的所有属性，<br>\n但是在jsx中我们必须分类清楚传给el-table的<code class=\"language-text\">attrs</code>和<code class=\"language-text\">props</code><br>\n比如el-table接受<code class=\"language-text\">data</code>这个prop，如果你放在attrs里传进去，那么就失效了。 </p>\n<p>这个我暂时也没找到特别好的解决方法，只能先引用去拿elTable上的props去进行比对$attrs，取交集。</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> ElTable <span class=\"token keyword\">from</span> <span class=\"token string\">'element-ui/lib/table'</span>\n<span class=\"token comment\">// 从$attrs里提取作为prop的值</span>\n<span class=\"token comment\">// 这里要注意的点是驼峰命名法(camelCase)和短横线命名法(kebab-case)</span>\n<span class=\"token comment\">// 都是可以被组件接受的，虽然elTable里的prop定义的属性叫cellClassName</span>\n<span class=\"token comment\">// 但是我们要把cell-class-name也解析进prop里</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> props<span class=\"token punctuation\">,</span> attrs <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">genPropsAndAttrs</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>$attrs<span class=\"token punctuation\">,</span> elTableProps<span class=\"token punctuation\">)</span></code></pre></div>\n<p>可以看到代码中模板的部分少了很多重复的判断，维护性和扩展性都更强了，jsx可以说是复杂组件的终极解决方案，但是要真正的封装好一个高阶组件，要做的还非常多。</p>","timeToRead":7,"frontmatter":{"title":"用jsx封装Vue中的复杂组件（网易云音乐实战项目需求）","date":"July 31, 2019","spoiler":""},"fields":{"slug":"/474922327/","langKey":"en"}}},"pageContext":{"slug":"/474922327/","previous":{"fields":{"slug":"/421413825/","langKey":"en","directoryName":"421413825"},"frontmatter":{"title":"babel7的配置与优化。"}},"next":{"fields":{"slug":"/479450340/","langKey":"en","directoryName":"479450340"},"frontmatter":{"title":"英文技术文章阅读。"}},"translations":[],"translatedLinks":[]}},"staticQueryHashes":["336482444"]}