{"componentChunkName":"component---src-templates-blog-post-js","path":"/690780892/","result":{"data":{"site":{"siteMetadata":{"title":"ssh的博客","author":"ssh"}},"markdownRemark":{"id":"8c5b5fa4-96d2-5376-9f00-b744deda66d2","html":"<p>TypeScript 4.1 快要发布了，老爷子 <a href=\"https://github.com/ahejlsberg\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Anders Hejlsberg</a> 加入了一项重大更新，<strong>「字符串模板类型」</strong> 的支持。昨天看到这个更新的我特别兴奋，曾几何时，只要一遇到字符串拼接相关的类型，TypeScript 就束手无策了，比如：</p>\n<ul>\n<li><code class=\"language-text\">Vuex</code> 中加了 <code class=\"language-text\">namespace</code> 以后，<code class=\"language-text\">dispatch</code> 一个 <code class=\"language-text\">mutation type</code> 会带上前缀 <code class=\"language-text\">dispatch(&#39;cart/add&#39;)</code>。</li>\n<li><code class=\"language-text\">lodash</code> 的 <code class=\"language-text\">get</code> 方法，可以对一个对象进行 <code class=\"language-text\">get(obj, &#39;a.b.c&#39;)</code> 这样的读取。</li>\n</ul>\n<p>现在 4.1 加入的这个新功能让这一切都拥有了可能。</p>\n<h2 id=\"基础语法\"><a href=\"#%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>基础语法</h2>\n<p>它的语法和 es 里的字符串模板很相似，所以上手成本也很低，先看几个例子：</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> EventName<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">string</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">T</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">Changed`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> <span class=\"token constant\">T0</span> <span class=\"token operator\">=</span> EventName<span class=\"token operator\">&lt;</span><span class=\"token string\">'foo'</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 'fooChanged'</span>\n<span class=\"token keyword\">type</span> <span class=\"token constant\">T1</span> <span class=\"token operator\">=</span> EventName<span class=\"token operator\">&lt;</span><span class=\"token string\">'foo'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bar'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'baz'</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 'fooChanged' | 'barChanged' | 'bazChanged'</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> Concat<span class=\"token operator\">&lt;</span><span class=\"token constant\">S1</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">string</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">S2</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">string</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">S1</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">S2</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> <span class=\"token constant\">T2</span> <span class=\"token operator\">=</span> Concat<span class=\"token operator\">&lt;</span><span class=\"token string\">'Hello'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'World'</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 'HelloWorld'</span></code></pre></div>\n<p>字符串模板中的联合类型会被展开后排列组合：</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> <span class=\"token constant\">T3</span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token string\">'top'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'bottom'</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">-</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token string\">'left'</span> <span class=\"token operator\">|</span> <span class=\"token string\">'right'</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">;</span>  \n<span class=\"token comment\">// 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'</span></code></pre></div>\n<h2 id=\"新增关键字\"><a href=\"#%E6%96%B0%E5%A2%9E%E5%85%B3%E9%94%AE%E5%AD%97\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>新增关键字</h2>\n<p>为了这个功能，老爷子在 TS 中新增了 <code class=\"language-text\">uppercase</code>, <code class=\"language-text\">lowercase</code>, <code class=\"language-text\">capitalize</code>, <code class=\"language-text\">uncapitalize</code> 这些关键字，用于对模板粒度字符串变量进行处理。</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> Cases<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">string</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>uppercase <span class=\"token constant\">T</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>lowercase <span class=\"token constant\">T</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>capitalize <span class=\"token constant\">T</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>uncapitalize <span class=\"token constant\">T</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> <span class=\"token constant\">T11</span> <span class=\"token operator\">=</span> Cases<span class=\"token operator\">&lt;</span><span class=\"token string\">'bar'</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 'BAR bar Bar bar'</span></code></pre></div>\n<p>其实很简单，就是提供了几个处理方法：大写、小写，首字母大写，首字母小写。</p>\n<h2 id=\"配合-infer\"><a href=\"#%E9%85%8D%E5%90%88-infer\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>配合 infer</h2>\n<p>特别强大的一点是，模板字符串可以通过 <code class=\"language-text\">infer</code> 关键字，实现类似于正则匹配提取的功能：</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> MatchPair<span class=\"token operator\">&lt;</span><span class=\"token constant\">S</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">string</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token constant\">S</span> <span class=\"token keyword\">extends</span> <span class=\"token template-string\"><span class=\"token string\">`[</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>infer <span class=\"token constant\">A</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">,</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>infer <span class=\"token constant\">B</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">]`</span></span> <span class=\"token operator\">?</span> <span class=\"token punctuation\">[</span><span class=\"token constant\">A</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">B</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span> unknown<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> <span class=\"token constant\">T20</span> <span class=\"token operator\">=</span> MatchPair<span class=\"token operator\">&lt;</span><span class=\"token string\">'[1,2]'</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// ['1', '2']</span>\n<span class=\"token keyword\">type</span> <span class=\"token constant\">T21</span> <span class=\"token operator\">=</span> MatchPair<span class=\"token operator\">&lt;</span><span class=\"token string\">'[foo,bar]'</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// ['foo', 'bar']</span></code></pre></div>\n<p>通过 <code class=\"language-text\">,</code> 分割左右两边，再在左右两边分别用一个 <code class=\"language-text\">infer</code> 泛型接受推断值 <code class=\"language-text\">[${infer A},${infer B}]</code>，就可以轻松的重新组合 <code class=\"language-text\">,</code> 两边的字符串。</p>\n<p>配合 <code class=\"language-text\">...</code> 拓展运算符和 <code class=\"language-text\">infer</code>递归，甚至可以实现 <code class=\"language-text\">Join</code> 功能：</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> Join<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">number</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">|</span> bigint<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">D</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">string</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span>\n    <span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">:</span>\n    <span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token punctuation\">[</span>unknown<span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span> <span class=\"token punctuation\">:</span>\n    <span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token punctuation\">[</span>unknown<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>infer <span class=\"token constant\">U</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">D</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>Join<span class=\"token operator\">&lt;</span><span class=\"token constant\">U</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">D</span><span class=\"token operator\">></span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span> <span class=\"token punctuation\">:</span>\n    <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">type</span> <span class=\"token constant\">T30</span> <span class=\"token operator\">=</span> Join<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'.'</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// '1.2.3.4'</span>\n<span class=\"token keyword\">type</span> <span class=\"token constant\">T31</span> <span class=\"token operator\">=</span> Join<span class=\"token operator\">&lt;</span><span class=\"token punctuation\">[</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bar'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'baz'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-'</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 'foo-bar-baz'</span></code></pre></div>\n<h2 id=\"infer-细节行为（9-月-3-日补充）\"><a href=\"#infer-%E7%BB%86%E8%8A%82%E8%A1%8C%E4%B8%BA%EF%BC%889-%E6%9C%88-3-%E6%97%A5%E8%A1%A5%E5%85%85%EF%BC%89\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>infer 细节行为（9 月 3 日补充）</h2>\n<ol>\n<li>字符串模板中的 <code class=\"language-text\">infer</code> 会一直匹配到字符串的结尾，比如用 <code class=\"language-text\">${infer T}x</code> 去匹配 <code class=\"language-text\">&#39;abcxxx&#39;</code> 会把 <code class=\"language-text\">T</code> 推断为 <code class=\"language-text\">&#39;abcxx&#39;</code>。</li>\n<li>字符串模板中两个 <code class=\"language-text\">infer</code> 相邻，第一个 <code class=\"language-text\">infer</code> 只会推断出单个字符，这有助于一些递归操作，比如 <code class=\"language-text\">${infer H}${infer T}</code> 去推断 <code class=\"language-text\">abcd</code>，<code class=\"language-text\">H</code> 会推断为 <code class=\"language-text\">a</code>，而 <code class=\"language-text\">T</code> 会推断为 <code class=\"language-text\">bcd</code>。</li>\n</ol>\n<h2 id=\"实战运用\"><a href=\"#%E5%AE%9E%E6%88%98%E8%BF%90%E7%94%A8\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>实战运用</h2>\n<h3 id=\"实现-vuex-namespace-推断：\"><a href=\"#%E5%AE%9E%E7%8E%B0-vuex-namespace-%E6%8E%A8%E6%96%AD%EF%BC%9A\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>实现 Vuex namespace 推断：</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> VuexOptions<span class=\"token operator\">&lt;</span><span class=\"token constant\">M</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">N</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">namespace</span><span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">N</span><span class=\"token punctuation\">,</span>\n   mutations<span class=\"token punctuation\">:</span> <span class=\"token constant\">M</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> Action<span class=\"token operator\">&lt;</span><span class=\"token constant\">M</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">N</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token constant\">N</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">string</span> <span class=\"token operator\">?</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token constant\">N</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">/</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>keyof <span class=\"token constant\">M</span> <span class=\"token operator\">&amp;</span> <span class=\"token builtin\">string</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span> <span class=\"token punctuation\">:</span> keyof <span class=\"token constant\">M</span>\n\n<span class=\"token keyword\">type</span> Store<span class=\"token operator\">&lt;</span><span class=\"token constant\">M</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">N</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">:</span> Action<span class=\"token operator\">&lt;</span><span class=\"token constant\">M</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">N</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">void</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">function</span> Vuex<span class=\"token operator\">&lt;</span><span class=\"token constant\">M</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">N</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>options<span class=\"token punctuation\">:</span> VuexOptions<span class=\"token operator\">&lt;</span><span class=\"token constant\">M</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">N</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Store<span class=\"token operator\">&lt;</span><span class=\"token constant\">M</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">N</span><span class=\"token operator\">></span>\n\n<span class=\"token keyword\">const</span> store <span class=\"token operator\">=</span> <span class=\"token function\">Vuex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">namespace</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"cart\"</span> <span class=\"token keyword\">as</span> <span class=\"token keyword\">const</span><span class=\"token punctuation\">,</span>\n   mutations<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nstore<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cart/add\"</span><span class=\"token punctuation\">)</span>\nstore<span class=\"token punctuation\">.</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"cart/remove\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>前往 <a href=\"https://www.typescriptlang.org/play?ts=4.1.0-pr-40336-8#code/C4TwDgpgBAagrhAHgeTMAlgewHYGcA8AsgDRQByAfFALxQDeAUFM9gIYC2EuYrAxhAH4AXOWJNm7OMFYYcuESQYBfBg1CQoAQV6zsRUpRrkoSYBGwATXFFzAATumwBzKAKgADACR0ySgPTeANYQIJgAZlCEUABkNvaOTkruUCLBoRGEqurQAMrAmHYQ+uRUtIzMUBbo3DK8ABYAFHy6Itq6xZQAlCIAbpjoFsqqFhC8ADashVBhcNg6WNiwCIgdFA2YaAvyS0iougQkJd1QeQVFh5SqvHLAcWdG8EgN5SwcXDz8IgBEvJPAX1BWNZrnhgGIKpJpPsRC8KoCLBYGp16FAlOC4VBCuxMD0IEiUSoKiolJ1VLYzgA6Ko1YD1Bo-P5+VgIr6k8mFKnVHi0xoMuzAPxYnEQVlAA\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Playground</a> 尝试一下~</p>\n<h3 id=\"实现-lodash-get-函数：\"><a href=\"#%E5%AE%9E%E7%8E%B0-lodash-get-%E5%87%BD%E6%95%B0%EF%BC%9A\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>实现 lodash get 函数：</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> PropType<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> Path <span class=\"token keyword\">extends</span> <span class=\"token class-name\">string</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span>\n    <span class=\"token builtin\">string</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Path</span> <span class=\"token operator\">?</span> unknown <span class=\"token punctuation\">:</span>\n    Path <span class=\"token keyword\">extends</span> <span class=\"token class-name\">keyof</span> <span class=\"token constant\">T</span> <span class=\"token operator\">?</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">[</span>Path<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">:</span>\n    Path <span class=\"token keyword\">extends</span> <span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>infer <span class=\"token constant\">K</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">.</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>infer <span class=\"token constant\">R</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">`</span></span> <span class=\"token operator\">?</span> <span class=\"token constant\">K</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">keyof</span> <span class=\"token constant\">T</span> <span class=\"token operator\">?</span> PropType<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token constant\">K</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">R</span><span class=\"token operator\">></span> <span class=\"token punctuation\">:</span> unknown <span class=\"token punctuation\">:</span>\n    unknown<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">function</span> <span class=\"token keyword\">get</span><span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">P</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">string</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">:</span> <span class=\"token constant\">P</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> PropType<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">P</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> b<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>c<span class=\"token punctuation\">:</span> <span class=\"token number\">42</span><span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">:</span> <span class=\"token string\">'hello'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> <span class=\"token keyword\">get</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span> <span class=\"token string\">\"a.b.c\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>前往 <a href=\"https://www.typescriptlang.org/play?ts=4.1.0-pr-40336-8#code/C4TwDgpgBACgTgezAFXBAPMgNLAhsACyggA9gIA7AEwGcobg4BLCgcwD4oBeAKCn-qMWrYmUq08hKAH4oAVwoBrCggDuFKAC4+AmPiKly1OooggEAMyjIZ1gNp7CAXS07+jg2ONQABgBIAbxYLCDgoAGkAXwA6QODQqAAlSJ9bcNEjCVNzKxtZeCRUSEw7cKccRM5NeSUVdVcBGuU1CgBuHh4qCABjABtcOGgLBW7gJgQNVghgTBwYDPE6BmY2dgAKBAAjACtq7CgwfWqYAEpjxBQ0Wdh2dp5uiYYoLe3uKACoXGqPze-u6oALAAmHBUaoAcgIEF6vQQ4KgkURdweFCeADdcL05NAuFApsANjscAAiXDRTbRbrEk5AA\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Playground</a> 尝试一下~</p>\n<h2 id=\"总结\"><a href=\"#%E6%80%BB%E7%BB%93\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>总结</h2>\n<p>TypeScript 4.1 带来的这个新功能让 TS 支持更多字符串相关的拼接场景，其实是特别实用的，希望各位看了以后都能有所收获~</p>\n<p>关注公众号「前端从进阶到入院」，关注第一手干货资讯，还可以获取『高级前端进阶指南』和『前端算法零基础进阶指南』。</p>","timeToRead":6,"frontmatter":{"title":"TypeScript 4.1 新特性：字符串模板类型，Vuex 终于有救了？","date":"September 02, 2020","spoiler":""},"fields":{"slug":"/690780892/","langKey":"en"}}},"pageContext":{"slug":"/690780892/","previous":{"fields":{"slug":"/690877725/","langKey":"en","directoryName":"690877725"},"frontmatter":{"title":"最简实现Promise，支持异步链式调用（20行）"}},"next":{"fields":{"slug":"/694055470/","langKey":"en","directoryName":"694055470"},"frontmatter":{"title":"利用 TS 4.1 新特性实现 Vuex 无限层级命名空间的 dispatch 类型推断。"}},"translations":[],"translatedLinks":[]}},"staticQueryHashes":["336482444"]}