{"componentChunkName":"component---src-templates-blog-post-js","path":"/683389653/","result":{"data":{"site":{"siteMetadata":{"title":"ssh的博客","author":"ssh"}},"markdownRemark":{"id":"ef4a119f-d6f3-587d-889e-bcf2954b934a","html":"<h2 id=\"前言\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h2>\n<p>小伙伴们好久不见，最近刚入职新公司，需求排的很满，平常是实在没时间写文章了，更新频率会变得比较慢。</p>\n<p>周末在家闲着无聊，突然小弟过来紧急求助，说是面试的时候，对方给了个 Vue 的递归菜单要求实现，回来找我复盘。</p>\n<p>正好这周是小周，没想着出去玩，就在家写写代码吧，我看了一下需求，确实是比较复杂，需要利用好递归组件，正好趁着这个机会总结一篇 Vue3 + TS 实现递归组件的文章。</p>\n<h2 id=\"需求\"><a href=\"#%E9%9C%80%E6%B1%82\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>需求</h2>\n<p>可以先在 <a href=\"https://sl1673495.github.io/vue-nested-menu/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Github Pages</a> 中预览一下效果。</p>\n<p>需求是这样的，后端会返回一串可能有无限层级的菜单，格式如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    id<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    father_id<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    status<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'生命科学竞赛'</span><span class=\"token punctuation\">,</span>\n    _child<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        id<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n        father_id<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        status<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token string\">'野外实习类'</span><span class=\"token punctuation\">,</span>\n        _child<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> father_id<span class=\"token punctuation\">:</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> status<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'植物学'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        id<span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span>\n        father_id<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        status<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n        name<span class=\"token punctuation\">:</span> <span class=\"token string\">'科学研究类'</span><span class=\"token punctuation\">,</span>\n        _child<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> father_id<span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> status<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'植物学与植物生理学'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> father_id<span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> status<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'动物学与动物生理学'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> father_id<span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> status<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'微生物学'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> father_id<span class=\"token punctuation\">:</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> status<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'生态学'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token number\">71</span><span class=\"token punctuation\">,</span> father_id<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> status<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'添加'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    id<span class=\"token punctuation\">:</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span>\n    father_id<span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    status<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    name<span class=\"token punctuation\">:</span> <span class=\"token string\">'考研相关'</span><span class=\"token punctuation\">,</span>\n    _child<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token number\">57</span><span class=\"token punctuation\">,</span> father_id<span class=\"token punctuation\">:</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> status<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'政治'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span> id<span class=\"token punctuation\">:</span> <span class=\"token number\">58</span><span class=\"token punctuation\">,</span> father_id<span class=\"token punctuation\">:</span> <span class=\"token number\">56</span><span class=\"token punctuation\">,</span> status<span class=\"token punctuation\">:</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'外国语'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<ol>\n<li>每一层的菜单元素如果有 <code class=\"language-text\">_child</code> 属性，<strong>这一项菜单被选中</strong>以后就要继续展示这一项的所有子菜单，预览一下动图：</li>\n</ol>\n<p><img src=\"https://user-images.githubusercontent.com/23615778/90882867-4438b280-e3df-11ea-8f65-196e81f6c98d.gif\" alt=\"Kapture 2020-08-21 at 18 49 46\"></p>\n<ol start=\"2\">\n<li>并且点击其中的任意一个层级，都需要把菜单的 <strong>完整的 <code class=\"language-text\">id</code> 链路</strong> 传递到最外层，给父组件请求数据用。比如点击了 <code class=\"language-text\">科学研究类</code>。那么向外 <code class=\"language-text\">emit</code> 的时候还需要带上它的第一个子菜单 <code class=\"language-text\">植物学与植物生理学</code> 的 <code class=\"language-text\">id</code>，以及它的父级菜单 <code class=\"language-text\">生命科学竞赛</code> 的 id，也就是 <code class=\"language-text\">[1, 7, 8]</code>。</li>\n<li>每一层的样式还可以自己定制。</li>\n</ol>\n<h2 id=\"实现\"><a href=\"#%E5%AE%9E%E7%8E%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>实现</h2>\n<p>这很显然是一个递归组件的需求，在设计递归组件的时候，我们要先想清楚数据到视图的映射。</p>\n<p>在后端返回的数据中，数组的每一层可以分别对应一个菜单项，那么数组的层则就对应视图中的一行，当前这层的菜单中，<strong>被点击选中</strong> 的那一项菜单的 <code class=\"language-text\">child</code> 就会被作为子菜单数据，交给递归的 <code class=\"language-text\">NestMenu</code> 组件，直到某一层的高亮菜单不再有 <code class=\"language-text\">child</code>，则递归终止。</p>\n<p><img src=\"https://user-images.githubusercontent.com/23615778/90954698-2d5e9280-e4a9-11ea-90ba-73093daea276.png\" alt=\"image\"></p>\n<p>由于需求要求每一层的样式可能是不同的，所以再每次调用递归组件的时候，我们都需要从父组件的 <code class=\"language-text\">props</code> 中拿到一个 <code class=\"language-text\">depth</code> 代表层级，并且把这个 <code class=\"language-text\">depth + 1</code> 继续传递给递归的 <code class=\"language-text\">NestMenu</code> 组件。</p>\n<p>重点主要就是这些，接下来编码实现。</p>\n<p>先看 <code class=\"language-text\">NestMenu</code> 组件的 <code class=\"language-text\">template</code> 部分的大致结构：</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>wrap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>menu-wrap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span>\n        <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>menu-item<span class=\"token punctuation\">\"</span></span>\n        <span class=\"token attr-name\">v-for</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>menuItem in data<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token punctuation\">></span></span>{{menuItem.name}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nest-menu</span>\n      <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>activeId<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">:data</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>subMenu<span class=\"token punctuation\">\"</span></span>\n      <span class=\"token attr-name\">:depth</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>depth + 1<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nest-menu</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>和我们预想设计中的一样， <code class=\"language-text\">menu-wrap</code> 代表当前菜单层， <code class=\"language-text\">nest-menu</code> 则就是组件本身，它负责递归的渲染子组件。</p>\n<h3 id=\"首次渲染\"><a href=\"#%E9%A6%96%E6%AC%A1%E6%B8%B2%E6%9F%93\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>首次渲染</h3>\n<p>在第一次获取到整个菜单的数据的时候，我们需要先把每层菜单的选中项默认设置为第一个子菜单，由于它很可能是异步获取的，所以我们最好是 <code class=\"language-text\">watch</code> 这个数据来做这个操作。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 菜单数据源发生变化的时候 默认选中当前层级的第一项</span>\n<span class=\"token keyword\">const</span> activeId <span class=\"token operator\">=</span>  ref<span class=\"token operator\">&lt;</span>number <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">watch</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> props<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span>newData<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>activeId<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newData <span class=\"token operator\">&amp;&amp;</span> newData<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        activeId<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> newData<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    immediate<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>现在我们从最上层开始讲起，第一层的 <code class=\"language-text\">activeId</code> 被设置成了 <code class=\"language-text\">生命科学竞赛</code> 的 id，注意我们传递给递归子组件的 <code class=\"language-text\">data</code> ，也就是 <code class=\"language-text\">生命科学竞赛</code> 的 <code class=\"language-text\">child</code>，是通过 <code class=\"language-text\">subMenu</code> 获取到的，它是一个计算属性：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getActiveSubMenu</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> data<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> id <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> id <span class=\"token operator\">===</span> activeId<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>_child\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> subMenu <span class=\"token operator\">=</span> <span class=\"token function\">computed</span><span class=\"token punctuation\">(</span>getActiveSubMenu<span class=\"token punctuation\">)</span></code></pre></div>\n<p>这样，就拿到了 <code class=\"language-text\">生命科学竞赛</code> 的 <code class=\"language-text\">child</code>，作为子组件的数据传递下去了。</p>\n<h3 id=\"点击菜单项\"><a href=\"#%E7%82%B9%E5%87%BB%E8%8F%9C%E5%8D%95%E9%A1%B9\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>点击菜单项</h3>\n<p>回到之前的需求设计，在点击了菜单项后，无论点击的是哪层，都需要把完整的 <code class=\"language-text\">id</code> 链路通过 <code class=\"language-text\">emit</code> 传递到最外层去，所以这里我们需要多做一些处理：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/**\n * 递归收集子菜单第一项的 id\n */</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getSubIds</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> subIds <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">traverse</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data <span class=\"token operator\">&amp;&amp;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> first <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n      subIds<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span>\n      <span class=\"token function\">traverse</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">.</span>_child<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">traverse</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> subIds\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onMenuItemClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>menuItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> newActiveId <span class=\"token operator\">=</span> menuItem<span class=\"token punctuation\">.</span>id\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newActiveId <span class=\"token operator\">!==</span> activeId<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    activeId<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> newActiveId\n    <span class=\"token keyword\">const</span> child <span class=\"token operator\">=</span> <span class=\"token function\">getActiveSubMenu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> subIds <span class=\"token operator\">=</span> <span class=\"token function\">getSubIds</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// 把子菜单的默认第一项 ids 也拼接起来 向父组件 emit</span>\n    context<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>newActiveId<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>subIds<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>由于我们之前定的规则是，点击了新的菜单以后默认选中子菜单的第一项，所以这里我们也递归去找子菜单数据里的第一项，放到 <code class=\"language-text\">subIds</code> 中，直到最底层。</p>\n<p>注意这里的 <code class=\"language-text\">context.emit(&quot;change&quot;, [newId, ...subIds]);</code>，这里是把事件向上 <code class=\"language-text\">emit</code>，如果这个菜单是中间层级的菜单，那么它的父组件也是 <code class=\"language-text\">NestMenu</code>，我们需要在父层级递归调用 <code class=\"language-text\">NestMenu</code> 组件的时候监听这个 <code class=\"language-text\">change</code> 事件。</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nest-menu</span>\n    <span class=\"token attr-name\">:key</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>activeId<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">v-if</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>activeId !== null<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">:data</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>getActiveSubMenu()<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">:depth</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>depth + 1<span class=\"token punctuation\">\"</span></span>\n    <span class=\"token attr-name\">@change</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>onSubActiveIdChange<span class=\"token punctuation\">\"</span></span>\n<span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nest-menu</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>在父层级的菜单接受到了子层级的菜单的 <code class=\"language-text\">change</code> 事件后，需要怎么做呢？没错，需要进一步的再向上传递：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onSubActiveIdChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ids<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  context<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'change'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>activeId<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>ids<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>这里就只需要简单的把自己当前的 <code class=\"language-text\">activeId</code> 拼接到数组的最前面，再继续向上传递即可。</p>\n<p>这样，任意一层的组件点击了菜单后，都会先用自己的 <code class=\"language-text\">activeId</code> 拼接好所有子层级的默认 <code class=\"language-text\">activeId</code>，再一层层向上 <code class=\"language-text\">emit</code>。并且向上的每一层父菜单都会把自己的 <code class=\"language-text\">activeId</code> 拼在前面，就像接力一样。</p>\n<p>最后，我们在应用层级的组件里，就可以轻松的拿到完整的 <code class=\"language-text\">id</code> 链路：</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nest-menu</span> <span class=\"token attr-name\">:data</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>menu<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@change</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>activeIdsChange<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\nexport default {\n  methods: {\n    activeIdsChange(ids) {\n      this.ids = ids;\n      console.log(\"当前选中的id路径\", ids);\n  },\n},</code></pre></div>\n<h3 id=\"样式区分\"><a href=\"#%E6%A0%B7%E5%BC%8F%E5%8C%BA%E5%88%86\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>样式区分</h3>\n<p>由于我们每次调用递归组件的时候，都会把 <code class=\"language-text\">depth + 1</code>，那么就可以通过把这个数字拼接到类名后面来实现样式区分了。</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>wrap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>menu-wrap<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>`menu-wrap-${depth}`<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>menu-item<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{menuItem.name}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nest-menu</span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span><span class=\"token punctuation\">></span></span><span class=\"token style language-css\">\n<span class=\"token selector\">.menu-wrap-0</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #ffccc7<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.menu-wrap-1</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #fff7e6<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.menu-wrap-2</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> #fcffe6<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h3 id=\"默认高亮\"><a href=\"#%E9%BB%98%E8%AE%A4%E9%AB%98%E4%BA%AE\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>默认高亮</h3>\n<p>上面的代码写完后，应对没有默认值时的需求已经足够了，这时候面试官说，产品要求这个组件能通过传入任意一个层级的 <code class=\"language-text\">id</code> 来默认展示高亮。</p>\n<p>其实这也难不倒我们，稍微改造一下代码，在父组件里假设我们通过 url 参数或者任意方式拿到了一个 <code class=\"language-text\">activeId</code>，先通过深度优先遍历的方式查找到这个 <code class=\"language-text\">id</code> 的所有父级。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> activeId <span class=\"token operator\">=</span> <span class=\"token number\">7</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">findPath</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>menus<span class=\"token punctuation\">,</span> targetId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> ids\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">traverse</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>subMenus<span class=\"token punctuation\">,</span> prev<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ids<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>subMenus<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span>\n    <span class=\"token punctuation\">}</span>\n    subMenus<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>subMenu<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>subMenu<span class=\"token punctuation\">.</span>id <span class=\"token operator\">===</span> activeId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        ids <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>prev<span class=\"token punctuation\">,</span> activeId<span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">return</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token function\">traverse</span><span class=\"token punctuation\">(</span>subMenu<span class=\"token punctuation\">.</span>_child<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>prev<span class=\"token punctuation\">,</span> subMenu<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">traverse</span><span class=\"token punctuation\">(</span>menus<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> ids\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> ids <span class=\"token operator\">=</span> <span class=\"token function\">findPath</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> activeId<span class=\"token punctuation\">)</span></code></pre></div>\n<p>这里我选择在递归的时候带上上一层的 <code class=\"language-text\">id</code>，在找到了目标 <code class=\"language-text\">id</code> 以后就能轻松的拼接处完整的父子 id 数组。</p>\n<p>然后我们把构造好的 <code class=\"language-text\">ids</code> 作为 <code class=\"language-text\">activeIds</code> 传递给 <code class=\"language-text\">NestMenu</code>，此时这时候 <code class=\"language-text\">NestMenu</code> 就要改变一下设计，成为一个「受控组件」，它的渲染状态是受我们外层传递的数据控制的。</p>\n<p>所以我们需要在初始化参数的时候改变一下取值逻辑，优先取 <code class=\"language-text\">activeIds[depth]</code> ，并且在点击菜单项的时候，要在最外层的页面组件中，接收到 <code class=\"language-text\">change</code> 事件时，把 <code class=\"language-text\">activeIds</code> 的数据同步改变。这样继续传递下去才不会导致 <code class=\"language-text\">NestMenu</code> 接收到的数据混乱。</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nest-menu</span> <span class=\"token attr-name\">:data</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>data<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">:defaultActiveIds</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>ids<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">@change</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>activeIdsChange<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><code class=\"language-text\">NestMenu</code> 初始化的时候，对有默认值的情况做一下处理，优先使用数组中取到的 <code class=\"language-text\">id</code> 值。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">:</span> IProps<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> depth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> activeIds <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">/**\n   * 这里 activeIds 也可能是异步获取到的 所以用 watch 保证初始化\n   */</span>\n  <span class=\"token keyword\">const</span> activeId <span class=\"token operator\">=</span> ref<span class=\"token operator\">&lt;</span>number <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> undefined<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">watch</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> activeIds<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">(</span>newActiveIds<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newActiveIds<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> newActiveId <span class=\"token operator\">=</span> newActiveIds<span class=\"token punctuation\">[</span>depth<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newActiveId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          activeId<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> newActiveId<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      immediate<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>这样，如果 <code class=\"language-text\">activeIds</code> 数组中取不到的话，默认还是 <code class=\"language-text\">null</code>，在 <code class=\"language-text\">watch</code> 到菜单数据变化的逻辑中，如果 <code class=\"language-text\">activeId</code> 是 <code class=\"language-text\">null</code> 的话，会被初始化为第一个子菜单的 <code class=\"language-text\">id</code>。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">watch</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> props<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span>newData<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>activeId<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newData <span class=\"token operator\">&amp;&amp;</span> newData<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        activeId<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> newData<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    immediate<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>在最外层页面容器监听到 <code class=\"language-text\">change</code> 事件的时候，要把数据源同步一下：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>nest<span class=\"token operator\">-</span>menu <span class=\"token punctuation\">:</span>data<span class=\"token operator\">=</span><span class=\"token string\">\"data\"</span> <span class=\"token punctuation\">:</span>activeIds<span class=\"token operator\">=</span><span class=\"token string\">\"ids\"</span> @change<span class=\"token operator\">=</span><span class=\"token string\">\"activeIdsChange\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ref <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"App\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">activeIdsChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>newIds<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      ids<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> newIds<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      ids<span class=\"token punctuation\">,</span>\n      activeIdsChange<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre></div>\n<p>如此一来，外部传入 <code class=\"language-text\">activeIds</code> 的时候，就可以控制整个 <code class=\"language-text\">NestMenu</code> 的高亮选中逻辑了。</p>\n<h3 id=\"数据源变动引发的-bug。\"><a href=\"#%E6%95%B0%E6%8D%AE%E6%BA%90%E5%8F%98%E5%8A%A8%E5%BC%95%E5%8F%91%E7%9A%84-bug%E3%80%82\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>数据源变动引发的 bug。</h3>\n<p>这时候，面试官对着你的 App 文件稍作改动，然后演示了这样一个 bug：</p>\n<p>App.vue 的 <code class=\"language-text\">setup</code> 函数中加了这样的一段逻辑：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">onMounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    menu<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>也就是说，组件渲染完成后过了一秒，菜单的最外层只剩下一项了，这时候面试官在一秒之内点击了最外层的第二项，这个组件在数据源改变之后，会报错：</p>\n<p><img src=\"https://user-images.githubusercontent.com/23615778/90976345-cacfca00-e56e-11ea-805d-443bc66af362.gif\" alt=\"Kapture 2020-08-23 at 18 30 44\"></p>\n<p>这是因为数据源已经改变了，但是组件内部的 <code class=\"language-text\">activeId</code> 状态依然停留在了一个已经不存在了的 <code class=\"language-text\">id</code> 上。</p>\n<p>这会导致 <code class=\"language-text\">subMenu</code> 这个 <code class=\"language-text\">computed</code> 属性在计算时出错。</p>\n<p>我们对 <code class=\"language-text\">watch data</code> 观测数据源的这段逻辑稍加改动：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">watch</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> props<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span>newData<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>activeId<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newData <span class=\"token operator\">&amp;&amp;</span> newData<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        activeId<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> newData<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// 如果当前层级的 data 中遍历无法找到 `activeId` 的值 说明这个值失效了</span>\n    <span class=\"token comment\">// 把它调整成数据源中第一个子菜单项的 id</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>props<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> id <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> id <span class=\"token operator\">===</span> activeId<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      activeId<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>data<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    immediate<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 在观测到数据变动之后 同步执行 这样会防止渲染发生错乱</span>\n    flush<span class=\"token punctuation\">:</span> <span class=\"token string\">'sync'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p><img src=\"https://user-images.githubusercontent.com/23615778/90976400-521d3d80-e56f-11ea-9e03-379c3ba3b994.gif\" alt=\"Kapture 2020-08-23 at 18 34 35\"></p>\n<p>注意这里的 <code class=\"language-text\">flush: &quot;sync&quot;</code> 很关键，Vue3 对于 <code class=\"language-text\">watch</code> 到数据源变动之后触发 <code class=\"language-text\">callback</code> 这一行为，默认是以 <code class=\"language-text\">post</code> 也就是渲染之后再执行的，但是在当前的需求下，如果我们用错误的 <code class=\"language-text\">activeId</code> 去渲染，就会直接导致报错了，所以我们需要手动把这个 <code class=\"language-text\">watch</code> 变成一个同步行为。</p>\n<p>这下再也不用担心数据源变动导致渲染错乱了。</p>\n<h2 id=\"完整代码\"><a href=\"#%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>完整代码</h2>\n<h3 id=\"appvue\"><a href=\"#appvue\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>App.vue</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>nest<span class=\"token operator\">-</span>menu <span class=\"token punctuation\">:</span>data<span class=\"token operator\">=</span><span class=\"token string\">\"data\"</span> <span class=\"token punctuation\">:</span>activeIds<span class=\"token operator\">=</span><span class=\"token string\">\"ids\"</span> @change<span class=\"token operator\">=</span><span class=\"token string\">\"activeIdsChange\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script<span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> ref <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> NestMenu <span class=\"token keyword\">from</span> <span class=\"token string\">\"./components/NestMenu.vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> data <span class=\"token keyword\">from</span> <span class=\"token string\">\"./menu.js\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> getSubIds <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./util\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"App\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 假设默认选中 id 为 7</span>\n    <span class=\"token keyword\">const</span> activeId <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">findPath</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>menus<span class=\"token punctuation\">,</span> targetId<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> ids<span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">traverse</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>subMenus<span class=\"token punctuation\">,</span> prev<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>ids<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>subMenus<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        subMenus<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>subMenu<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>subMenu<span class=\"token punctuation\">.</span>id <span class=\"token operator\">===</span> activeId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            ids <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>prev<span class=\"token punctuation\">,</span> activeId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n          <span class=\"token function\">traverse</span><span class=\"token punctuation\">(</span>subMenu<span class=\"token punctuation\">.</span>_child<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>prev<span class=\"token punctuation\">,</span> subMenu<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token function\">traverse</span><span class=\"token punctuation\">(</span>menus<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n      <span class=\"token keyword\">return</span> ids<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> ids <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token function\">findPath</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> activeId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">activeIdsChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>newIds<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      ids<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> newIds<span class=\"token punctuation\">;</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"当前选中的id路径\"</span><span class=\"token punctuation\">,</span> newIds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      ids<span class=\"token punctuation\">,</span>\n      activeIdsChange<span class=\"token punctuation\">,</span>\n      data<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  components<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    NestMenu<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span></code></pre></div>\n<h3 id=\"nestmenuvue\"><a href=\"#nestmenuvue\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>NestMenu.vue</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"wrap\"</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>div <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"menu-wrap\"</span> <span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"`menu-wrap-${depth}`\"</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>div\n        <span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"menu-item\"</span>\n        v<span class=\"token operator\">-</span><span class=\"token keyword\">for</span><span class=\"token operator\">=</span><span class=\"token string\">\"menuItem in data\"</span>\n        <span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token operator\">=</span><span class=\"token string\">\"getActiveClass(menuItem.id)\"</span>\n        @click<span class=\"token operator\">=</span><span class=\"token string\">\"onMenuItemClick(menuItem)\"</span>\n        <span class=\"token punctuation\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"menuItem.id\"</span>\n      <span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>menuItem<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>nest<span class=\"token operator\">-</span>menu\n      <span class=\"token punctuation\">:</span>key<span class=\"token operator\">=</span><span class=\"token string\">\"activeId\"</span>\n      v<span class=\"token operator\">-</span><span class=\"token keyword\">if</span><span class=\"token operator\">=</span><span class=\"token string\">\"subMenu &amp;&amp; subMenu.length\"</span>\n      <span class=\"token punctuation\">:</span>data<span class=\"token operator\">=</span><span class=\"token string\">\"subMenu\"</span>\n      <span class=\"token punctuation\">:</span>depth<span class=\"token operator\">=</span><span class=\"token string\">\"depth + 1\"</span>\n      <span class=\"token punctuation\">:</span>activeIds<span class=\"token operator\">=</span><span class=\"token string\">\"activeIds\"</span>\n      @change<span class=\"token operator\">=</span><span class=\"token string\">\"onSubActiveIdChange\"</span>\n    <span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>nest<span class=\"token operator\">-</span>menu<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>script lang<span class=\"token operator\">=</span><span class=\"token string\">\"ts\"</span><span class=\"token operator\">></span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> watch<span class=\"token punctuation\">,</span> ref<span class=\"token punctuation\">,</span> onMounted<span class=\"token punctuation\">,</span> computed <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"vue\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> data <span class=\"token keyword\">from</span> <span class=\"token string\">\"../menu\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">IProps</span> <span class=\"token punctuation\">{</span>\n  data<span class=\"token punctuation\">:</span> <span class=\"token keyword\">typeof</span> data<span class=\"token punctuation\">;</span>\n  depth<span class=\"token punctuation\">:</span> number<span class=\"token punctuation\">;</span>\n  activeIds<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> number<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token punctuation\">{</span>\n  name<span class=\"token punctuation\">:</span> <span class=\"token string\">\"NestMenu\"</span><span class=\"token punctuation\">,</span>\n  props<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"data\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"depth\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"activeIds\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token function\">setup</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">:</span> IProps<span class=\"token punctuation\">,</span> context<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> depth <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> activeIds<span class=\"token punctuation\">,</span> data <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 这里 activeIds 也可能是异步获取到的 所以用 watch 保证初始化\n     */</span>\n    <span class=\"token keyword\">const</span> activeId <span class=\"token operator\">=</span> ref<span class=\"token operator\">&lt;</span>number <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> undefined<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">watch</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> activeIds<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">(</span>newActiveIds<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newActiveIds<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> newActiveId <span class=\"token operator\">=</span> newActiveIds<span class=\"token punctuation\">[</span>depth<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newActiveId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            activeId<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> newActiveId<span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        immediate<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        flush<span class=\"token punctuation\">:</span> <span class=\"token string\">'sync'</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 菜单数据源发生变化的时候 默认选中当前层级的第一项\n     */</span>\n    <span class=\"token function\">watch</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> props<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">(</span>newData<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>activeId<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newData <span class=\"token operator\">&amp;&amp;</span> newData<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            activeId<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> newData<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// 如果当前层级的 data 中遍历无法找到 `activeId` 的值 说明这个值失效了</span>\n        <span class=\"token comment\">// 把它调整成数据源中第一个子菜单项的 id</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>props<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> id <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> id <span class=\"token operator\">===</span> activeId<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          activeId<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> props<span class=\"token punctuation\">.</span>data<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        immediate<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// 在观测到数据变动之后 同步执行 这样会防止渲染发生错乱</span>\n        flush<span class=\"token punctuation\">:</span> <span class=\"token string\">\"sync\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onMenuItemClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>menuItem<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> newActiveId <span class=\"token operator\">=</span> menuItem<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newActiveId <span class=\"token operator\">!==</span> activeId<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        activeId<span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> newActiveId<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> child <span class=\"token operator\">=</span> <span class=\"token function\">getActiveSubMenu</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> subIds <span class=\"token operator\">=</span> <span class=\"token function\">getSubIds</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// 把子菜单的默认第一项 ids 也拼接起来 向父组件 emit</span>\n        context<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"change\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>newActiveId<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>subIds<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">/**\n     * 接受到子组件更新 activeId 的同时\n     * 需要作为一个中介告知父组件 activeId 更新了\n     */</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onSubActiveIdChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ids<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      context<span class=\"token punctuation\">.</span><span class=\"token function\">emit</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"change\"</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>activeId<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>ids<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getActiveSubMenu</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> props<span class=\"token punctuation\">.</span>data<span class=\"token operator\">?</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> id <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> id <span class=\"token operator\">===</span> activeId<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>_child<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> subMenu <span class=\"token operator\">=</span> <span class=\"token function\">computed</span><span class=\"token punctuation\">(</span>getActiveSubMenu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 样式相关\n     */</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getActiveClass</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>id <span class=\"token operator\">===</span> activeId<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"menu-active\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">return</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">/**\n     * 递归收集子菜单第一项的 id\n     */</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getSubIds</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> subIds <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">traverse</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>data <span class=\"token operator\">&amp;&amp;</span> data<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> first <span class=\"token operator\">=</span> data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n          subIds<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n          <span class=\"token function\">traverse</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">.</span>_child<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n      <span class=\"token function\">traverse</span><span class=\"token punctuation\">(</span>child<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">return</span> subIds<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n      depth<span class=\"token punctuation\">,</span>\n      activeId<span class=\"token punctuation\">,</span>\n      subMenu<span class=\"token punctuation\">,</span>\n      onMenuItemClick<span class=\"token punctuation\">,</span>\n      onSubActiveIdChange<span class=\"token punctuation\">,</span>\n      getActiveClass<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>script<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>style<span class=\"token operator\">></span>\n<span class=\"token punctuation\">.</span>wrap <span class=\"token punctuation\">{</span>\n  padding<span class=\"token punctuation\">:</span> <span class=\"token number\">12</span>px <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">.</span>menu<span class=\"token operator\">-</span>wrap <span class=\"token punctuation\">{</span>\n  display<span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n  flex<span class=\"token operator\">-</span>wrap<span class=\"token punctuation\">:</span> wrap<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">.</span>menu<span class=\"token operator\">-</span>wrap<span class=\"token operator\">-</span><span class=\"token number\">0</span> <span class=\"token punctuation\">{</span>\n  background<span class=\"token punctuation\">:</span> #ffccc7<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">.</span>menu<span class=\"token operator\">-</span>wrap<span class=\"token operator\">-</span><span class=\"token number\">1</span> <span class=\"token punctuation\">{</span>\n  background<span class=\"token punctuation\">:</span> #fff7e6<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">.</span>menu<span class=\"token operator\">-</span>wrap<span class=\"token operator\">-</span><span class=\"token number\">2</span> <span class=\"token punctuation\">{</span>\n  background<span class=\"token punctuation\">:</span> #fcffe6<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">.</span>menu<span class=\"token operator\">-</span>item <span class=\"token punctuation\">{</span>\n  margin<span class=\"token operator\">-</span>left<span class=\"token punctuation\">:</span> <span class=\"token number\">16</span>px<span class=\"token punctuation\">;</span>\n  cursor<span class=\"token punctuation\">:</span> pointer<span class=\"token punctuation\">;</span>\n  white<span class=\"token operator\">-</span>space<span class=\"token punctuation\">:</span> nowrap<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">.</span>menu<span class=\"token operator\">-</span>active <span class=\"token punctuation\">{</span>\n  color<span class=\"token punctuation\">:</span> #f5222d<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>style<span class=\"token operator\">></span></code></pre></div>\n<h2 id=\"源码地址\"><a href=\"#%E6%BA%90%E7%A0%81%E5%9C%B0%E5%9D%80\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>源码地址</h2>\n<p><a href=\"https://github.com/sl1673495/vue-nested-menu\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/sl1673495/vue-nested-menu</a></p>\n<h2 id=\"总结\"><a href=\"#%E6%80%BB%E7%BB%93\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>总结</h2>\n<p>一个递归的菜单组件，说简单也简单，说难也有它的难点。如果我们不理解 Vue 的异步渲染和观察策略，可能中间的 bug 就会困扰我们许久。所以适当学习原理还是挺有必要的。</p>\n<p>在开发通用组件的时候，一定要注意数据源的传入时机（同步、异步），对于异步传入的数据，要利用好 <code class=\"language-text\">watch</code> 这个 API 去观测变动，做相应的操作。并且要考虑数据源的变化是否会和组件内原来保存的状态冲突，在适当的时机要做好清理操作。</p>\n<p>另外留下一个小问题，我在 <code class=\"language-text\">NestMenu</code> 组件 <code class=\"language-text\">watch</code> 数据源的时候，选择这样去做：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">watch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> props<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>而不是解构后再去观测：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> data <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> props<span class=\"token punctuation\">;</span>\n<span class=\"token function\">watch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>这两者之间有区别吗？这又是一道考察深度的面试题。</p>\n<p>开发优秀组件的路还是很漫长的，欢迎各位也在评论区留下你的看法~</p>\n<h2 id=\"招聘\"><a href=\"#%E6%8B%9B%E8%81%98\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>招聘</h2>\n<p>字节跳动内推啦，Client Infrastructure是字节跳动终端基础架构团队，面向字节跳动全业务线的移动端、Web、Desktop等终端业务的基础架构部门，为公司业务的高效迭代、质量保证、研发效率和体验提供平台、工具、框架和专项技术能力支撑。\n研发领域包括但不限于APP框架和基础组件、研发体系、自动化测试、APM、跨平台框架、端智能解决方案、Web开发引擎、Node.js基建以及下一代移动开发技术的预研等，目前在北上广深杭五地均设有研发中心。</p>\n<p>上海的同学点这里一键投递，来我们部门和我做同事吧~ </p>\n<p><a href=\"https://job.toutiao.com/s/JhRtmQv\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://job.toutiao.com/s/JhRtmQv</a></p>\n<p>其他地区（北上广深杭）也可以自己搜索你想要的业务线和工作地点，通过我的下方内推链接直接投递即可。</p>\n<p><a href=\"https://job.toutiao.com/s/JhRDWep\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://job.toutiao.com/s/JhRDWep</a></p>\n<p>校招的同学看这里：</p>\n<p>投递链接: <a href=\"https://job.toutiao.com/s/JhRV7nC\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://job.toutiao.com/s/JhRV7nC</a></p>","timeToRead":15,"frontmatter":{"title":"Vue3 + TypeScript 实现递归菜单组件","date":"August 21, 2020","spoiler":""},"fields":{"slug":"/683389653/","langKey":"en"}}},"pageContext":{"slug":"/683389653/","previous":{"fields":{"slug":"/678385574/","langKey":"en","directoryName":"678385574"},"frontmatter":{"title":"一道蚂蚁金服异步串行面试题"}},"next":{"fields":{"slug":"/690877951/","langKey":"en","directoryName":"690877951"},"frontmatter":{"title":"手写async await的最简实现（20行）"}},"translations":[],"translatedLinks":[]}},"staticQueryHashes":["336482444"]}