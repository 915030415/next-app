{"componentChunkName":"component---src-templates-blog-post-js","path":"/584387569/","result":{"data":{"site":{"siteMetadata":{"title":"ssh的博客","author":"ssh"}},"markdownRemark":{"id":"37c187c0-a4a7-50d7-99a9-0cc4fd2e3976","html":"<h2 id=\"前言\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h2>\n<p>本文由一个基础的购物车需求展开，一步一步带你深入理解React Hook中的坑和优化</p>\n<p>通过本篇文章你可以学到：  </p>\n<p>✨React Hook + TypeScript编写<code class=\"language-text\">业务组件</code>的实践</p>\n<p>✨如何利用React.memo<code class=\"language-text\">优化性能</code></p>\n<p>✨如何避免Hook带来的<code class=\"language-text\">闭包陷阱</code></p>\n<p>✨如何抽象出简单好用的<code class=\"language-text\">自定义hook</code></p>\n<h2 id=\"预览地址\"><a href=\"#%E9%A2%84%E8%A7%88%E5%9C%B0%E5%9D%80\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>预览地址</h2>\n<p><a href=\"https://sl1673495.github.io/react-cart\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://sl1673495.github.io/react-cart</a></p>\n<h2 id=\"代码仓库\"><a href=\"#%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>代码仓库</h2>\n<p>本文涉及到的代码已经整理到github仓库中，用cra搭建了一个示例工程，关于性能优化的部分可以打开控制台查看重渲染的情况。  </p>\n<p><a href=\"https://github.com/sl1673495/react-cart\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/sl1673495/react-cart</a></p>\n<h2 id=\"需求分解\"><a href=\"#%E9%9C%80%E6%B1%82%E5%88%86%E8%A7%A3\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>需求分解</h2>\n<p>作为一个购物车需求，那么它必然涉及到几个需求点：</p>\n<ol>\n<li>勾选、全选与反选。</li>\n<li>根据选中项计算总价。</li>\n</ol>\n<p><img src=\"https://user-gold-cdn.xitu.io/2020/3/3/1709e44da6578aa9?w=794&#x26;h=1036&#x26;f=gif&#x26;s=63288\" alt=\"gif1\"></p>\n<h2 id=\"需求实现\"><a href=\"#%E9%9C%80%E6%B1%82%E5%AE%9E%E7%8E%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>需求实现</h2>\n<h3 id=\"获取数据\"><a href=\"#%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>获取数据</h3>\n<p>首先我们请求到购物车数据，这里并不是本文的重点，可以通过自定义请求hook实现，也可以通过普通的useState + useEffect实现。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getCart</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/api/cart'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> \n  <span class=\"token comment\">// 购物车数据</span>\n  cartData<span class=\"token punctuation\">,</span>\n  <span class=\"token comment\">// 重新请求数据的方法</span>\n  refresh \n<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> useRequest<span class=\"token operator\">&lt;</span>CartResponse<span class=\"token operator\">></span><span class=\"token punctuation\">(</span>getCart<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"勾选逻辑实现\"><a href=\"#%E5%8B%BE%E9%80%89%E9%80%BB%E8%BE%91%E5%AE%9E%E7%8E%B0\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>勾选逻辑实现</h3>\n<p>我们考虑用一个对象作为映射表，通过<code class=\"language-text\">checkedMap</code>这个变量来记录所有被勾选的商品id：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">type CheckedMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">:</span> number<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> boolean\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// 商品勾选</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>checkedMap<span class=\"token punctuation\">,</span> setCheckedMap<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> useState<span class=\"token operator\">&lt;</span>CheckedMap<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> onCheckedChange<span class=\"token punctuation\">:</span> <span class=\"token function-variable function\">OnCheckedChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>cartItem<span class=\"token punctuation\">,</span> checked<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> id <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> cartItem\n  <span class=\"token keyword\">const</span> newCheckedMap <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> checkedMap<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> checked<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">setCheckedMap</span><span class=\"token punctuation\">(</span>newCheckedMap<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"计算勾选总价\"><a href=\"#%E8%AE%A1%E7%AE%97%E5%8B%BE%E9%80%89%E6%80%BB%E4%BB%B7\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>计算勾选总价</h3>\n<p>再用reduce来实现一个计算价格总和的函数</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token comment\">// cartItems的积分总和</span>\n <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sumPrice</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>cartItems<span class=\"token punctuation\">:</span> CartItem<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> cartItems<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>sum<span class=\"token punctuation\">,</span> cur<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> sum <span class=\"token operator\">+</span> cur<span class=\"token punctuation\">.</span>price<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n <span class=\"token punctuation\">}</span></code></pre></div>\n<p>那么此时就需要一个过滤出所有选中商品的函数</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 返回已选中的所有cartItems</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">filterChecked</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    Object<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span>checkedMap<span class=\"token punctuation\">)</span>\n      <span class=\"token comment\">// 通过这个filter 筛选出所有checked状态为true的项</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>entries <span class=\"token operator\">=></span> <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>entries<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n      <span class=\"token comment\">// 再从cartData中根据id来map出选中列表</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>checkedId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> cartData<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> id <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> id <span class=\"token operator\">===</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>checkedId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>最后把这俩函数一组合，价格就出来了：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token comment\">// 计算礼享积分</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">calcPrice</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">sumPrice</span><span class=\"token punctuation\">(</span><span class=\"token function\">filterChecked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>有人可能疑惑，为什么一个简单的逻辑要抽出这么几个函数，这里我要解释一下，为了保证文章的易读性，我把真实需求做了简化。  </p>\n<p>在真实需求中，可能会对不同类型的商品分别做总价计算，因此<code class=\"language-text\">filterChecked</code>这个函数就不可或缺了，filterChecked可以传入一个额外的过滤参数，去返回勾选中的商品的<code class=\"language-text\">子集</code>，这里就不再赘述。</p>\n<h3 id=\"全选反选逻辑\"><a href=\"#%E5%85%A8%E9%80%89%E5%8F%8D%E9%80%89%E9%80%BB%E8%BE%91\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>全选反选逻辑</h3>\n<p>有了<code class=\"language-text\">filterChecked</code>函数以后，我们也可以轻松的计算出派生状态<code class=\"language-text\">checkedAll</code>，是否全选：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// 全选</span>\n<span class=\"token keyword\">const</span> checkedAll <span class=\"token operator\">=</span> cartData<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">filterChecked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> cartData<span class=\"token punctuation\">.</span>length</code></pre></div>\n<p>写出全选和反全选的函数：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onCheckedAllChange</span> <span class=\"token operator\">=</span> newCheckedAll <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 构造新的勾选map</span>\n  <span class=\"token keyword\">let</span> newCheckedMap<span class=\"token punctuation\">:</span> CheckedMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 全选</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newCheckedAll<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    cartData<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>cartItem <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      newCheckedMap<span class=\"token punctuation\">[</span>cartItem<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token comment\">// 取消全选的话 直接把map赋值为空对象</span>\n  <span class=\"token function\">setCheckedMap</span><span class=\"token punctuation\">(</span>newCheckedMap<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>如果是</p>\n<ul>\n<li><code class=\"language-text\">全选</code> 就把<code class=\"language-text\">checkedMap</code>的每一个商品id都赋值为true。</li>\n<li><code class=\"language-text\">反选</code> 就把<code class=\"language-text\">checkedMap</code>赋值为空对象。  </li>\n</ul>\n<h3 id=\"渲染商品子组件\"><a href=\"#%E6%B8%B2%E6%9F%93%E5%95%86%E5%93%81%E5%AD%90%E7%BB%84%E4%BB%B6\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>渲染商品子组件</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span>cartData<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>cartItem <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> id <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> cartItem\n  <span class=\"token keyword\">const</span> checked <span class=\"token operator\">=</span> checkedMap<span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>ItemCard\n        key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>id<span class=\"token punctuation\">}</span>\n        cartItem<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>cartItem<span class=\"token punctuation\">}</span>\n        checked<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>checked<span class=\"token punctuation\">}</span>\n        onCheckedChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>onCheckedChange<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>可以看出，是否勾选的逻辑就这样轻松的传给了子组件。  </p>\n<h2 id=\"reactmemo性能优化\"><a href=\"#reactmemo%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React.memo性能优化</h2>\n<p>到了这一步，基本的购物车需求已经实现了。</p>\n<p>但是现在我们有了新的问题。</p>\n<p>这是React的一个缺陷，默认情况下几乎没有任何性能优化。  </p>\n<p>我们来看一下动图演示：</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2020/3/3/1709e458494cf448?w=1644&#x26;h=1048&#x26;f=gif&#x26;s=138141\" alt=\"gif2\"></p>\n<p>购物车此时有5个商品，看控制台的打印，每次都是以5为倍数增长每点击一次checkbox，都会触发所有子组件的重新渲染。</p>\n<p>如果我们有50个商品在购物车中，我们改了其中某一项的<code class=\"language-text\">checked</code>状态，也会导致50个子组件重新渲染。  </p>\n<p>我们想到了一个api： <code class=\"language-text\">React.memo</code>，这个api基本等效于class组件中的<code class=\"language-text\">shouldComponentUpdate</code>，如果我们用这个api让子组件只有在checked发生改变的时候再重新渲染呢？  </p>\n<p>好，我们进入子组件的编写：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// memo优化策略</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">areEqual</span><span class=\"token punctuation\">(</span>prevProps<span class=\"token punctuation\">:</span> Props<span class=\"token punctuation\">,</span> nextProps<span class=\"token punctuation\">:</span> Props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    prevProps<span class=\"token punctuation\">.</span>checked <span class=\"token operator\">===</span> nextProps<span class=\"token punctuation\">.</span>checked\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> ItemCard<span class=\"token punctuation\">:</span> <span class=\"token constant\">FC</span><span class=\"token operator\">&lt;</span>Props<span class=\"token operator\">></span> <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">memo</span><span class=\"token punctuation\">(</span>props <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> checked<span class=\"token punctuation\">,</span> onCheckedChange <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> props\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>checkbox \n        value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>checked<span class=\"token punctuation\">}</span> \n        onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">onCheckedChange</span><span class=\"token punctuation\">(</span>cartItem<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> \n      <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span>商品<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> areEqual<span class=\"token punctuation\">)</span></code></pre></div>\n<p>在这种优化策略下，我们认为只要前后两次渲染传入的props中的<code class=\"language-text\">checked</code>相等，那么就不去重新渲染子组件。  </p>\n<h2 id=\"react-hook的陈旧值导致的bug\"><a href=\"#react-hook%E7%9A%84%E9%99%88%E6%97%A7%E5%80%BC%E5%AF%BC%E8%87%B4%E7%9A%84bug\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>React Hook的陈旧值导致的bug</h2>\n<p>到这里就完成了吗？其实，这里是有bug的。</p>\n<p>我们来看一下bug还原：</p>\n<p><img src=\"https://user-gold-cdn.xitu.io/2020/3/3/1709e454fc3b64d9?w=790&#x26;h=1034&#x26;f=gif&#x26;s=49176\" alt=\"gif3\"></p>\n<p>如果我们先点击了第一个商品的勾选，再点击第二个商品的勾选，你会发现第一个商品的勾选状态没了。  </p>\n<p>在勾选了第一个商品后，我们此时的最新的<code class=\"language-text\">checkedMap</code>其实是 </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{ 1: true }</code></pre></div>\n<p>而由于我们的优化策略，第二个商品在第一个商品勾选后没有重新渲染，  </p>\n<p>注意React的函数式组件，在每次渲染的时候都会重新执行，从而产生一个闭包环境。  </p>\n<p>所以第二个商品拿到的<code class=\"language-text\">onCheckedChange</code>还是前一次渲染购物车这个组件的函数闭包中的，那么<code class=\"language-text\">checkedMap</code>自然也是上一次函数闭包中的最初的空对象。</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">const</span> onCheckedChange<span class=\"token punctuation\">:</span> <span class=\"token function-variable function\">OnCheckedChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>cartItem<span class=\"token punctuation\">,</span> checked<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> id <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> cartItem\n    <span class=\"token comment\">// 注意，这里的checkedMap还是最初的空对象！！</span>\n    <span class=\"token keyword\">const</span> newCheckedMap <span class=\"token operator\">=</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> checkedMap<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> checked<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">setCheckedMap</span><span class=\"token punctuation\">(</span>newCheckedMap<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<p>因此，第二个商品勾选后，没有按照预期的计算出正确的<code class=\"language-text\">checkedMap</code></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span> \n  <span class=\"token number\">1</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> \n  <span class=\"token number\">2</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span> </code></pre></div>\n<p>而是计算出了错误的</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">{</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span></code></pre></div>\n<p>这就导致了第一个商品的勾选状态被丢掉了。  </p>\n<p>这也是React Hook的闭包带来的臭名昭著陈旧值的问题。</p>\n<p>那么此时有一个简单的解决方案，在父组件中用<code class=\"language-text\">React.useRef</code>把函数通过一个引用来传递给子组件。</p>\n<p>由于<code class=\"language-text\">ref</code>在React组件的整个生命周期中只存在一个引用，因此通过current永远是可以访问到引用中最新的函数值的，不会存在闭包陈旧值的问题。</p>\n<div class=\"gatsby-highlight\" data-language=\"diff\"><pre class=\"language-diff\"><code class=\"language-diff\">  // 要把ref传给子组件 这样才能保证子组件能在不重新渲染的情况下拿到最新的函数引用\n  const onCheckedChangeRef = React.useRef(onCheckedChange)\n  // 注意要在每次渲染后把ref中的引用指向当次渲染中最新的函数。\n  useEffect(() => {\n    onCheckedChangeRef.current = onCheckedChange\n  })\n  \n  return (\n    &lt;ItemCard\n      key={id}\n      cartItem={cartItem}\n      checked={checked}\n<span class=\"token inserted\">+     onCheckedChangeRef={onCheckedChangeRef}</span>\n    />\n  )</code></pre></div>\n<p>子组件</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// memo优化策略</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">areEqual</span><span class=\"token punctuation\">(</span>prevProps<span class=\"token punctuation\">:</span> Props<span class=\"token punctuation\">,</span> nextProps<span class=\"token punctuation\">:</span> Props<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    prevProps<span class=\"token punctuation\">.</span>checked <span class=\"token operator\">===</span> nextProps<span class=\"token punctuation\">.</span>checked\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> ItemCard<span class=\"token punctuation\">:</span> <span class=\"token constant\">FC</span><span class=\"token operator\">&lt;</span>Props<span class=\"token operator\">></span> <span class=\"token operator\">=</span> React<span class=\"token punctuation\">.</span><span class=\"token function\">memo</span><span class=\"token punctuation\">(</span>props <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> checked<span class=\"token punctuation\">,</span> onCheckedChangeRef <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> props\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>checkbox \n        value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>checked<span class=\"token punctuation\">}</span> \n        onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> onCheckedChangeRef<span class=\"token punctuation\">.</span><span class=\"token function\">current</span><span class=\"token punctuation\">(</span>cartItem<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span> \n      <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>span<span class=\"token operator\">></span>商品<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>span<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> areEqual<span class=\"token punctuation\">)</span></code></pre></div>\n<p>到此时，我们的简单的性能优化就完成了。</p>\n<h2 id=\"自定义hook之usechecked\"><a href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89hook%E4%B9%8Busechecked\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>自定义hook之useChecked</h2>\n<p>那么下一个场景，又遇到这种全选反选类似的需求，难道我们再这样重复写一套吗？这是不可接受的，我们用自定义hook来抽象这些数据以及行为。  </p>\n<p>并且这次我们通过useReducer来避免闭包旧值的陷阱（dispatch在组件的生命周期中保持唯一引用，并且总是能操作到最新的值）。</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useReducer<span class=\"token punctuation\">,</span> useEffect<span class=\"token punctuation\">,</span> useCallback <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Option</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/** 用来在map中记录勾选状态的key 一般取id */</span>\n  key<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> CheckedMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">CHECKED_CHANGE</span> <span class=\"token operator\">=</span> <span class=\"token string\">'CHECKED_CHANGE'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">CHECKED_ALL_CHANGE</span> <span class=\"token operator\">=</span> <span class=\"token string\">'CHECKED_ALL_CHANGE'</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">SET_CHECKED_MAP</span> <span class=\"token operator\">=</span> <span class=\"token string\">'SET_CHECKED_MAP'</span>\n\n<span class=\"token keyword\">type</span> CheckedChange<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">typeof</span> <span class=\"token constant\">CHECKED_CHANGE</span><span class=\"token punctuation\">;</span>\n  payload<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    dataItem<span class=\"token punctuation\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">;</span>\n    checked<span class=\"token punctuation\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> CheckedAllChange <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">typeof</span> <span class=\"token constant\">CHECKED_ALL_CHANGE</span><span class=\"token punctuation\">;</span>\n  payload<span class=\"token punctuation\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> SetCheckedMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">typeof</span> <span class=\"token constant\">SET_CHECKED_MAP</span><span class=\"token punctuation\">;</span>\n  payload<span class=\"token punctuation\">:</span> CheckedMap<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> Action<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> CheckedChange<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> CheckedAllChange <span class=\"token operator\">|</span> SetCheckedMap\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> OnCheckedChange<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> checked<span class=\"token punctuation\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>\n\n<span class=\"token comment\">/**\n * 提供勾选、全选、反选等功能\n * 提供筛选勾选中的数据的函数\n * 在数据更新的时候自动剔除陈旧项\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> useChecked <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Record</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n  dataSource<span class=\"token punctuation\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> key <span class=\"token operator\">=</span> <span class=\"token string\">'id'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">:</span> Option <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>checkedMap<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span>checkedMapParam<span class=\"token punctuation\">:</span> CheckedMap<span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">:</span> Action<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token constant\">CHECKED_CHANGE</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> payload <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> action\n          <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> dataItem<span class=\"token punctuation\">,</span> checked <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> payload\n          <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> id <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> dataItem\n          <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token operator\">...</span>checkedMapParam<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> checked<span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">case</span> <span class=\"token constant\">CHECKED_ALL_CHANGE</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> payload<span class=\"token punctuation\">:</span> newCheckedAll <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> action\n          <span class=\"token keyword\">const</span> newCheckedMap<span class=\"token punctuation\">:</span> CheckedMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n          <span class=\"token comment\">// 全选</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>newCheckedAll<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            dataSource<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>dataItem <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n              newCheckedMap<span class=\"token punctuation\">[</span>dataItem<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">}</span>\n          <span class=\"token keyword\">return</span> newCheckedMap\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">case</span> <span class=\"token constant\">SET_CHECKED_MAP</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> action<span class=\"token punctuation\">.</span>payload\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n          <span class=\"token keyword\">return</span> checkedMapParam\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">/** 勾选状态变更 */</span>\n  <span class=\"token keyword\">const</span> onCheckedChange<span class=\"token punctuation\">:</span> OnCheckedChange<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span>dataItem<span class=\"token punctuation\">,</span> checked<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">CHECKED_CHANGE</span><span class=\"token punctuation\">,</span>\n        payload<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          dataItem<span class=\"token punctuation\">,</span>\n          checked<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">type</span> <span class=\"token function-variable function\">FilterCheckedFunc</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">boolean</span>\n  <span class=\"token comment\">/** 筛选出勾选项 可以传入filter函数继续筛选 */</span>\n  <span class=\"token keyword\">const</span> filterChecked <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">:</span> <span class=\"token function-variable function\">FilterCheckedFunc</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        Object<span class=\"token punctuation\">.</span><span class=\"token function\">entries</span><span class=\"token punctuation\">(</span>checkedMap<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>entries <span class=\"token operator\">=></span> <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>entries<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>checkedId<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n            dataSource<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> id <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> id <span class=\"token operator\">===</span> <span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>checkedId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">)</span>\n          <span class=\"token comment\">// 有可能勾选了以后直接删除 此时id虽然在checkedMap里 但是dataSource里已经没有这个数据了</span>\n          <span class=\"token comment\">// 先把空项过滤掉 保证外部传入的func拿到的不为undefined</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>Boolean<span class=\"token punctuation\">)</span>\n          <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span>checkedMap<span class=\"token punctuation\">,</span> dataSource<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">/** 是否全选状态 */</span>\n  <span class=\"token keyword\">const</span> checkedAll <span class=\"token operator\">=</span>\n    dataSource<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">filterChecked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> dataSource<span class=\"token punctuation\">.</span>length\n\n  <span class=\"token comment\">/** 全选反选函数 */</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onCheckedAllChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>newCheckedAll<span class=\"token punctuation\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">CHECKED_ALL_CHANGE</span><span class=\"token punctuation\">,</span>\n      payload<span class=\"token punctuation\">:</span> newCheckedAll<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token comment\">// 数据更新的时候 如果勾选中的数据已经不在数据内了 就删除掉</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">filterChecked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>checkedItem <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> changed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>dataSource<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>dataItem <span class=\"token operator\">=></span> checkedItem<span class=\"token punctuation\">.</span>id <span class=\"token operator\">===</span> dataItem<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">delete</span> checkedMap<span class=\"token punctuation\">[</span>checkedItem<span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">]</span>\n        changed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>changed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">SET_CHECKED_MAP</span><span class=\"token punctuation\">,</span>\n          payload<span class=\"token punctuation\">:</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> checkedMap<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// eslint-disable-next-line react-hooks/exhaustive-deps</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>dataSource<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    checkedMap<span class=\"token punctuation\">,</span>\n    dispatch<span class=\"token punctuation\">,</span>\n    onCheckedChange<span class=\"token punctuation\">,</span>\n    filterChecked<span class=\"token punctuation\">,</span>\n    onCheckedAllChange<span class=\"token punctuation\">,</span>\n    checkedAll<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>这时候在组件内使用，就很简单了：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>\n  checkedAll<span class=\"token punctuation\">,</span>\n  checkedMap<span class=\"token punctuation\">,</span>\n  onCheckedAllChange<span class=\"token punctuation\">,</span>\n  onCheckedChange<span class=\"token punctuation\">,</span>\n  filterChecked<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useChecked</span><span class=\"token punctuation\">(</span>cartData<span class=\"token punctuation\">)</span></code></pre></div>\n<p>我们在自定义hook里把复杂的业务逻辑全部做掉了，包括数据更新后的无效id剔除等等。快去推广给团队的小伙伴，让他们早点下班吧。  </p>\n<h2 id=\"自定义hook之usemap\"><a href=\"#%E8%87%AA%E5%AE%9A%E4%B9%89hook%E4%B9%8Busemap\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>自定义hook之useMap</h2>\n<p>有一天，突然又来了个需求，我们需要用一个map来根据购物车商品的id来记录另外的一些东西，我们突然发现，上面的自定义hook把map的处理等等逻辑也都打包进去了，我们只能给map的值设为<code class=\"language-text\">true / false</code>，灵活性不够。  </p>\n<p>我们进一步把<code class=\"language-text\">useMap</code>也抽出来，然后让<code class=\"language-text\">useCheckedMap</code>基于它之上开发。</p>\n<h3 id=\"usemap\"><a href=\"#usemap\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useMap</h3>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useReducer<span class=\"token punctuation\">,</span> useEffect<span class=\"token punctuation\">,</span> useCallback <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Option</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">/** 用来在map中作为key 一般取id */</span>\n  key<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> MapType <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">CHANGE</span> <span class=\"token operator\">=</span> <span class=\"token string\">'CHANGE'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">CHANGE_ALL</span> <span class=\"token operator\">=</span> <span class=\"token string\">'CHANGE_ALL'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token constant\">SET_MAP</span> <span class=\"token operator\">=</span> <span class=\"token string\">'SET_MAP'</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> Change<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">typeof</span> <span class=\"token constant\">CHANGE</span><span class=\"token punctuation\">;</span>\n  payload<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    dataItem<span class=\"token punctuation\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">;</span>\n    value<span class=\"token punctuation\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> ChangeAll <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">typeof</span> <span class=\"token constant\">CHANGE_ALL</span><span class=\"token punctuation\">;</span>\n  payload<span class=\"token punctuation\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> SetCheckedMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">typeof</span> <span class=\"token constant\">SET_MAP</span><span class=\"token punctuation\">;</span>\n  payload<span class=\"token punctuation\">:</span> MapType<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> Action<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> Change<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">|</span> ChangeAll <span class=\"token operator\">|</span> SetCheckedMap\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">type</span> OnValueChange<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token builtin\">any</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">any</span>\n\n<span class=\"token comment\">/**\n * 提供map操作的功能\n * 在数据更新的时候自动剔除陈旧项\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> useMap <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Record</span><span class=\"token operator\">&lt;</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">any</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n  dataSource<span class=\"token punctuation\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> key <span class=\"token operator\">=</span> <span class=\"token string\">'id'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">:</span> Option <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>map<span class=\"token punctuation\">,</span> dispatch<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useReducer</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span>checkedMapParam<span class=\"token punctuation\">:</span> MapType<span class=\"token punctuation\">,</span> action<span class=\"token punctuation\">:</span> Action<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>action<span class=\"token punctuation\">.</span><span class=\"token keyword\">type</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 单值改变</span>\n        <span class=\"token keyword\">case</span> <span class=\"token constant\">CHANGE</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> payload <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> action\n          <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> dataItem<span class=\"token punctuation\">,</span> value <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> payload\n          <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> id <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> dataItem\n          <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token operator\">...</span>checkedMapParam<span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">[</span>id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> value<span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// 所有值改变</span>\n        <span class=\"token keyword\">case</span> <span class=\"token constant\">CHANGE_ALL</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> payload <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> action\n          <span class=\"token keyword\">const</span> newMap<span class=\"token punctuation\">:</span> MapType <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n          dataSource<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>dataItem <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            newMap<span class=\"token punctuation\">[</span>dataItem<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> payload\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n          <span class=\"token keyword\">return</span> newMap\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token comment\">// 完全替换map</span>\n        <span class=\"token keyword\">case</span> <span class=\"token constant\">SET_MAP</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> action<span class=\"token punctuation\">.</span>payload\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n          <span class=\"token keyword\">return</span> checkedMapParam\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">/** map某项的值变更 */</span>\n  <span class=\"token keyword\">const</span> onMapValueChange<span class=\"token punctuation\">:</span> OnValueChange<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>dataItem<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">CHANGE</span><span class=\"token punctuation\">,</span>\n      payload<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        dataItem<span class=\"token punctuation\">,</span>\n        value<span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token comment\">// 数据更新的时候 如果map中的数据已经不在dataSource内了 就删除掉</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    dataSource<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span>checkedItem <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">let</span> changed <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token comment\">// map中包含此项</span>\n        <span class=\"token comment\">// 并且数据源中找不到此项了</span>\n        checkedItem<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> map <span class=\"token operator\">&amp;&amp;</span>\n        <span class=\"token operator\">!</span>dataSource<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>dataItem <span class=\"token operator\">=></span> checkedItem<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span> <span class=\"token operator\">===</span> dataItem<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">delete</span> map<span class=\"token punctuation\">[</span>checkedItem<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\n        changed <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>changed<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">type</span><span class=\"token punctuation\">:</span> <span class=\"token constant\">SET_MAP</span><span class=\"token punctuation\">,</span>\n          payload<span class=\"token punctuation\">:</span> Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> map<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// eslint-disable-next-line react-hooks/exhaustive-deps</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>dataSource<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    map<span class=\"token punctuation\">,</span>\n    dispatch<span class=\"token punctuation\">,</span>\n    onMapValueChange<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>这是一个通用的map操作的自定义hook，它考虑了闭包陷阱，考虑了旧值的删除。</p>\n<p>在此之上，我们实现上面的<code class=\"language-text\">useChecked</code></p>\n<h3 id=\"usechecked\"><a href=\"#usechecked\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useChecked</h3>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useCallback <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useMap<span class=\"token punctuation\">,</span> <span class=\"token constant\">CHANGE_ALL</span><span class=\"token punctuation\">,</span> Option <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'./use-map'</span>\n\ntype CheckedMap <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">:</span> string<span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span> boolean<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> type OnCheckedChange<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">,</span> checked<span class=\"token punctuation\">:</span> boolean<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> any\n\n<span class=\"token comment\">/**\n * 提供勾选、全选、反选等功能\n * 提供筛选勾选中的数据的函数\n * 在数据更新的时候自动剔除陈旧项\n */</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> useChecked <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Record</span><span class=\"token operator\">&lt;</span>string<span class=\"token punctuation\">,</span> any<span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n  dataSource<span class=\"token punctuation\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  option<span class=\"token punctuation\">:</span> Option <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> map<span class=\"token punctuation\">:</span> checkedMap<span class=\"token punctuation\">,</span> onMapValueChange<span class=\"token punctuation\">,</span> dispatch <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useMap</span><span class=\"token punctuation\">(</span>\n    dataSource<span class=\"token punctuation\">,</span>\n    option\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> key <span class=\"token operator\">=</span> <span class=\"token string\">'id'</span> <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> option\n\n  <span class=\"token comment\">/** 勾选状态变更 */</span>\n  <span class=\"token keyword\">const</span> onCheckedChange<span class=\"token punctuation\">:</span> OnCheckedChange<span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span>dataItem<span class=\"token punctuation\">,</span> checked<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token function\">onMapValueChange</span><span class=\"token punctuation\">(</span>dataItem<span class=\"token punctuation\">,</span> checked<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span>onMapValueChange<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">)</span>\n\n  type <span class=\"token function-variable function\">FilterCheckedFunc</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> boolean\n  <span class=\"token comment\">/** 筛选出勾选项 可以传入filter函数继续筛选 */</span>\n  <span class=\"token keyword\">const</span> filterChecked <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span>func<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> FilterCheckedFunc<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> checkedDataSource <span class=\"token operator\">=</span> dataSource<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>item <span class=\"token operator\">=></span>\n        <span class=\"token function\">Boolean</span><span class=\"token punctuation\">(</span>checkedMap<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">[</span>key<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">return</span> func <span class=\"token operator\">?</span> checkedDataSource<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> checkedDataSource\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span>checkedMap<span class=\"token punctuation\">,</span> dataSource<span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">/** 是否全选状态 */</span>\n  <span class=\"token keyword\">const</span> checkedAll <span class=\"token operator\">=</span>\n    dataSource<span class=\"token punctuation\">.</span>length <span class=\"token operator\">!==</span> <span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">filterChecked</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>length <span class=\"token operator\">===</span> dataSource<span class=\"token punctuation\">.</span>length\n\n  <span class=\"token comment\">/** 全选反选函数 */</span>\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">onCheckedAllChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>newCheckedAll<span class=\"token punctuation\">:</span> boolean<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 全选</span>\n    <span class=\"token keyword\">const</span> payload <span class=\"token operator\">=</span> <span class=\"token operator\">!</span><span class=\"token operator\">!</span>newCheckedAll\n    <span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      type<span class=\"token punctuation\">:</span> <span class=\"token constant\">CHANGE_ALL</span><span class=\"token punctuation\">,</span>\n      payload<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">{</span>\n    checkedMap<span class=\"token punctuation\">:</span> checkedMap <span class=\"token keyword\">as</span> CheckedMap<span class=\"token punctuation\">,</span>\n    dispatch<span class=\"token punctuation\">,</span>\n    onCheckedChange<span class=\"token punctuation\">,</span>\n    filterChecked<span class=\"token punctuation\">,</span>\n    onCheckedAllChange<span class=\"token punctuation\">,</span>\n    checkedAll<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"总结\"><a href=\"#%E6%80%BB%E7%BB%93\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>总结</h2>\n<p>本文通过一个真实的购物车需求，一步一步的完成优化、踩坑，在这个过程中，我们对React Hook的优缺点一定也有了进一步的认识。  </p>\n<p>在利用自定义hook把通用逻辑抽取出来后，我们业务组件内的代码量大大的减少了，并且其他相似的场景都可以去复用。  </p>\n<p>React Hook带来了一种新的开发模式，但是也带来了一些陷阱，它是一把双刃剑，如果你能合理使用，那么它会给你带来很强大的力量。</p>\n<p>感谢你的阅读，希望这篇文章可以给你启发。</p>","timeToRead":13,"frontmatter":{"title":"React Hook + TypeScript 深入浅出实现一个购物车（陷阱、性能优化、自定义hook）","date":"March 19, 2020","spoiler":""},"fields":{"slug":"/584387569/","langKey":"en"}}},"pageContext":{"slug":"/584387569/","previous":{"fields":{"slug":"/560234136/","langKey":"en","directoryName":"560234136"},"frontmatter":{"title":"TypeScript 参数简化实战（进阶知识点conditional types）"}},"next":{"fields":{"slug":"/588385836/","langKey":"en","directoryName":"588385836"},"frontmatter":{"title":"前端高级进阶指南"}},"translations":[],"translatedLinks":[]}},"staticQueryHashes":["336482444"]}